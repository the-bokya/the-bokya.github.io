---
interface Props {
  title: string;
  body: string;
  href: string;
}

const { href, title, body } = Astro.props;
---

<a href={href}>
  <div
    class="card"
    x-data="{mouse_x: 0, mouse_y: 0, reveal: false, touch: 'ontouchstart' in window}"
    @pointerenter="$el.style.setProperty('--opacity', '0.2')"
    @pointerleave="$el.style.setProperty('--opacity', '0')"
    @pointermove="rect = $el.getBoundingClientRect(); [mouse_x, mouse_y] = [$event.clientX - rect.left, $event.clientY - rect.top]"
    x-effect="$el.style.setProperty('--x', `${mouse_x}px`); $el.style.setProperty('--y', `${mouse_y}px`); $el.style.setProperty('--td', `${100/Math.max(mouse_y, 0.001)}`); $el.style.setProperty('--dd', `${Math.max(mouse_y/300, 0.25)}`)"
    x-intersect.margin.-40%.0%="reveal = touch"
    x-intersect:leave.margin.-40%.0%="reveal = false"
    :class="reveal && 'revealed'"
  >
    <h2 :class="reveal && 'revealed-h2'" x-effect="console.log(reveal)">
      {title}
    </h2>
    <div class="body" :class="reveal && 'revealed-body'">{body}</div>
  </div></a
>

<style>
  a {
    display: block;
    height: 15rem;
    width: 15rem;
  }
  .card {
    --td: 1;
    --dd: 0;
    height: 100%;
    width: 100%;
    border-radius: 2rem;
    position: relative;
    transition: 0.5s;
    overflow: hidden;
    padding: 2rem;
    background-color: rgb(0, 0, 0);
    background: radial-gradient(
      at var(--x) var(--y),
      rgba(148, 148, 148, var(--opacity)),
      rgb(0, 0, 0, 1)
    );
    border: 2px solid rgb(89, 89, 89);
    backdrop-filter: blur(20px);
    box-shadow: inset 0 0px 20px black;
  }
  .card > h2 {
    color: rgb(255, 255, 255);
    height: 100%;
    font-size: 1.2em;
    position: absolute;
    top: 0;
    left: 0;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    margin: 0;
    width: 100%;
    transition:
      0.5s cubic-bezier(0.75, 0.77, 0, 1.15),
      text-shadow 0.2s,
      color 0s;
    font-family: "Sen", sans-serif;
    font-optical-sizing: auto;
    font-weight: 800;
    font-style: normal;
    transform: translate(0, 0);
  }
  .card > .body {
    height: 100%;
    position: absolute;
    top: 100%;
    left: 0;
    transition:
      0.7s cubic-bezier(0.46, 0.95, 0, 0.99),
      color 0s;
    color: rgba(255, 255, 255, 0.355);
    text-shadow: none;
    font-weight: bold;
    text-align: center;
    padding: 1rem;
    width: 100%;
    font-size: 0.8em;
    opacity: 0;
  }
  .card:hover h2,
  .card > .revealed-h2 {
    text-shadow: none;
    transform: translate(0, -20%);
  }
  .card:hover h2 {
    color: rgba(255, 255, 255, var(--td));
  }
  .revealed-h2 {
    color: rgba(255, 255, 255, 0.766);
  }
  .card:hover .body,
  .card > .revealed-body {
    transform: translate(0, -50%);
    opacity: 0.7;
  }
  .card:hover .body {
    color: rgba(255, 255, 255, var(--dd));
  }
  .card > .revealed-body {
    color: rgba(255, 255, 255, 1);
  }
  .card:hover,
  .card.revealed {
    box-shadow:
      0 6px 5px rgba(255, 255, 255, 0.2),
      inset 0 0px 20px black;
    border: 2px solid rgb(42, 151, 163);
  }
  .card.revealed {
    background: radial-gradient(
      circle at top center,
      rgba(148, 148, 148, 0.4),
      rgb(0, 0, 0, 1)
    );
  }
  .card > .revealed-body {
    color: rgb(146, 146, 146);
    text-shadow: 0 2px 4px rgb(0, 0, 0);
  }
</style>
