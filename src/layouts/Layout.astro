---
interface Props {
  title: string;
}

const { title } = Astro.props;
import Navbar from "../components/Navbar.astro";
import type NavLink from "./NavProp";
import Footer from "./Footer.astro";
import footerBorder from "../assets/img/footer.svg";
import FavIcon from "./favicon.svg";
import "@fontsource-variable/sen";
import "@fontsource-variable/jetbrains-mono";
import "@fontsource-variable/space-grotesk";
const pages_proto: any[] = [
  { title: "Home", link: "/" },
  { title: "Blog", link: "/blogs/" },
];
const pages: NavLink[] = pages_proto.map((i) => {
  i.selected = Astro.url.pathname == i.link;
  return i;
});
const footer = `url(${footerBorder.src})`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Ayush Chaudhari's blog" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={FavIcon.src} />
    <meta name="generator" content={Astro.generator} />
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/@alpinejs/intersect@3.x.x/dist/cdn.min.js"
    ></script>
    <title>{title}</title>
  </head>
  <body
    x-data="{hide_nav: false}"
    @scroll.window="hide_nav = (window.pageYOffset < 500) ? false : true"
  >
    <Navbar pages={pages} />
    <main>
      <slot />
    </main>
    <Footer />
  </body><style is:global define:vars={{ footer }}>
    * {
      box-sizing: border-box;
    }
    :root {
      --cool-shadow: 0 -2px 10px red, 0 -4px 10px rgba(21, 255, 0, 0.34),
        0px 5px 20px rgba(39, 34, 184, 0.701);
    }
    article {
      text-align: justify;
      word-wrap: break-word;
      hyphens: auto;
    }
    main a {
      text-decoration: none;
      color: rgb(0, 255, 123);
      text-shadow:
        0px -2px 3px rgb(255, 15, 15),
        0 1px 6px rgb(187, 182, 255);
    }
    html {
      background-color: black;
    }
    h1 {
      font-family: "Sen Variable", sans-serif;
      font-optical-sizing: auto;
      font-weight: 800;
      font-style: normal;

      font-size: 3em;
      color: white;
      text-align: justify;
      text-shadow: var(--cool-shadow);
      margin: 0 0 4rem 0;
    }
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 583;
      font-size: 1.4em;
      color: rgb(227, 227, 227);
      text-shadow: var(--cool-shadow);
      margin: 1.5em 0 0.5em 0;
    }
    body {
      background-image: linear-gradient(black calc(100% - 20rem), transparent), var(--footer);
      background-repeat: no-repeat;
      background-size: contain;
      background-position: center bottom;
      display: grid;
      grid-template-rows:
        [top-start] 7rem [top-end main-start] minmax(calc(100vh - 7rem), 100%)
        [main-end footer-start] 20vh [footer-end];
      grid-template-columns:
        [body-start] 1fr [main-start nav-start] min(91%, 800px)
        [main-end nav-end] 1fr [body-end];
      gap: 2rem 0;
      margin: 0;
      padding: 0;
    }
    main {
      grid-column: main-start / main-end;
      grid-row: main-start / main-end;
      color: rgb(169, 169, 169);
      font-family: "Space Grotesk Variable", sans-serif;
      width: 100%;
      height: max-content;
    }
    main p {
      margin: 0.5em;
    }
    main img {
      width: 80%;
      height: auto;
      margin: 2rem auto;
      display: block;
      border-radius: 1vw;
      box-shadow: var(--cool-shadow);
    }
    main pre.astro-code {
      border-radius: 2rem;
      padding: 1.5rem;
      background-color: rgb(12, 12, 12) !important;
      box-shadow: var(--cool-shadow), inset 0 0 100px rgba(255, 255, 255, 0.049);
      font-family: "JetBrains Mono Variable", monospace;
      font-weight: 600;
    }
  </style>
</html>
